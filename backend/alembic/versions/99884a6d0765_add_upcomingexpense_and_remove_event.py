"""Add UpcomingExpense and remove Event

Revision ID: 99884a6d0765
Revises: 8a765c9b1524
Create Date: 2024-11-05 11:16:12.763669

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '99884a6d0765'
down_revision: Union[str, None] = '8a765c9b1524'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_events_id', table_name='events')
    op.drop_table('events')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('events',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('date', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('event_type', postgresql.ENUM('EXPENSE', 'EVENT', name='eventtype'), autoincrement=False, nullable=True),
    sa.Column('amount', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='events_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='events_pkey')
    )
    op.create_index('ix_events_id', 'events', ['id'], unique=False)
    # ### end Alembic commands ###
